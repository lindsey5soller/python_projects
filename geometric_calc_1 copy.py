# -*- coding: utf-8 -*-
"""Geometric_calc_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zr6TgbAkiLX8KXeCYjCPQyd6TDI6jUEM
"""

import math
import numpy as np

"""##Formulas"""

class Circle():
  def __int__(self):
    pass

  def circle(self, radius):
    self.radius = radius
    circ_diamater = radius * 2
    circ_circumferance = 2 * np.pi() * radius
    circ_area = np.pi() * radius ** 2
    return f'The diamater is {circ_diamater}, the circumferance is {circ_circumferance}, and the area is {circ_area}.'

  def cone (self, radius, height):
    self.radius = radius
    self.height = height
    cone_slant = math.sqrt( radius ** 2 + height ** 2)
    cone_surface_area = np.pi() * radius * (radius + cone_slant)
    cone_volume = np.pi() * radius ** 2 * height / 3
    cone_area = np.pi() * radius ** 2
    cone_circumferance = 2 * np.pi() * radius
    return f'The area of the base is {cone_area}, and the circumferance of the base is {cone_circumferance}. The surface area of the cone is {cone_surface_area}, the volume of the cone is {cone_volume}, and the slant is {cone_slant}.'

  def cylinder(self, radius, height):
    self.radius = radius
    self.height = height
    cyl_surface_area = 2 * radius * np.pi() * height + 2 * np.pi() * radius ** 2
    cyl_volume = np.pi() * radius ** 2 * height
    cyl_lateral_surface = 2 * np.pi() * radius * height
    cyl_base_area = np.pi() * radius ** 2
    cyl_diameter = 2 * radius
    return f'The diameter is {cyl_diameter}, and the base area is {cyl_base_area}. The volume is {cyl_volume}, the surface area is {cyl_surface_area}, and the lateral surface is {cyl_lateral_surface}.'

class Triangle():
  def __int__(self):
    pass

  def area(self, base, height):
    self.base = base
    self.height = height
    area = self.base * self.height /2
    return f'The area is {area}.'
    
  def perimeter(self, side_1, side_2, side_3):
    self.side_1 = side_1
    self.side_2 = side_2
    self.side_3 = side_3
    perimeter = side_1 + side_2 + side_3
    return f'The perimeter is {perimeter}.'

class Squares():
  def __int__(self):
    pass

  def rectangle(self, length, width):
    self.length = length
    self.width = width 
    rec_area = self.length * self.width
    rec_perimeter = 2 * self.length + self.width * 2
    return f'The area is {rec_area}, and the perimeter is {rec_perimeter}'

  def cube(self, length):
    self.length = length
    cube_area = length ** 3
    cube_surface_area = 6 * length ** 2
    return f'The volume is {cube_area}, and the perimeter is {cube_surface_area}.'

  def rectangular_prism(self, length, width, height):
    self.length = length
    self.width = width
    self.height = height
    recp_surface_area = 2 * (length * width + length * height + height * width)
    recp_volume = width * length * height
    recp_space_diagonal = math.sqrt(length ** 2 + width ** 2 + height ** 2)
    return f'The surface area is {recp_surface_area}, the volume is {recp_volume}, and the space diagonal is {recp_space_diagonal}.'

  def pyramid(self, width, length, height):
    self.length = length
    self.width = width
    self.height = height
    w = width 
    l = length
    h = height
    pyr_surface_area = l * w + l * math.sqrt((w / 2) ** 2 + h ** 2 + w) * math.sqrt((l / 2) ** 2 + h ** 2)
    pyr_volume = l * w * h / 3
    pyr_lateral_surface_area = l * math.sqrt((w / 2) ** 2 + h ** 2 + w) * math.sqrt ((l / 2) ** 2 + h ** 2)
    pyr_base_area = l * w
    return f'The base area is {pyr_base_area}. The surface area is {pyr_surface_area}, the lateral surface area is {pyr_lateral_surface_area}, and the volume is {pyr_volume}.'

x = str(input("What shape do you want to solve?\n"))
if x.lower() == 'rectangle':
  l = input("What is the length?\n")
  w = input("What is the width?\n")
  l = int(l)
  w = int(w)
  x = Squares()
  print(x.rectangle(1, w))
elif x.lower() == 'triangle':
  y = input('Do you want to find the area, perimeter, or both?\n')
  if y.lower() == 'area':
    b = input('What is the legnth of the base?\n')
    h = input('What is the height?\n')
    y = Triangle()
    print(y.area(b, h))
  if y.lower() == 'perimeter':
    s_1 = input('What is the legnth of side 1?\n')
    s_2 = input('What is the legnth of side 2?\n')
    s_3 = input('What is the legnth of side 3?\n')
    y = Triangle()
    print(y.perimeter(s_1, s_2, s_3))
  if y.lower() == 'both':
    b = input('What is the base?\n')
    h = input('What is the height?\n')
    s_1 = input('What is the legnth of side 1?\n')
    s_2 = input('What is the legnth of side 2?\n')
    s_3 = input('What is the legnth of side 3?\n')
    s_1 = int(s_1)
    s_2 = int(s_2)
    s_3 = int(s_3)
    y = Triangle()
    print(y.perimeter(s_1, s_2, s_3), y.area(b, h))
  else:
    print('Please enter area, primeter, or both.\n')
elif x.lower() == 'circle':
  r = input('what is the radius?\n')
  x = Circle()
  r = int(r)
  print(x.circle(r))

"""## Old Comments"""

#def rectangle(legnth, width):
  #rec_area = legnth * width
  #rec_perimeter = 2 * legnth + 2 * width
  #return f'The area is {rec_area}, and the perimeter is {rec_perimeter}'

#def triangle_area(base, height):
 # tri_area = base * height /2
  #return f'The area is {tri_area}.'

#def triangle_perimeter(side_1, side_2, side_3):
  #tri_perimeter = side_1 + side_2 + side_3
  #return f'The perimeter is {tri_perimeter}.'

#def cube(length):
  #cube_area = length ** 3
  #cube_surface_area = 6 * length ** 2
  #return f'The volume is {cube_area}, and the perimeter is {cube_surface_area}.'

#def circle(radius):
  #circ_diamater = radius * 2
  #circ_circumferance = 2 * 3.14 * radius
  #circ_area = 3.14 * radius ** 2
  #return f'The diamater is {circ_diamater}, the circumferance is {circ_circumferance}, and the area is {circ_area}.'

#def sphere(radius):
  #sphere_surface_area = 4 * 3.14* radius ** 2
  #sphere_volume = 4/3 * 3.14 * radius ** 3
  #sphere_diamater = radius * 2
  #return f'The diamter is {sphere_diamater}, the surface area is {sphere_surface_area}, and the volume is {sphere_volume}.'

#def cone (radius, height):
  #cone_slant = math.sqrt( radius ** 2 + height ** 2)
  #cone_surface_area = 3.14 * radius * (radius + cone_slant)
  #cone_volume = 3.14 * radius ** 2 * height / 3
  #cone_area = 3.14 * radius ** 2
  #cone_circumferance = 2 * 3.14 * radius
  #return f'The area of the base is {cone_area}, and the circumferance of the base is {cone_circumferance}. The surface area of the cone is {cone_surface_area}, the volume of the cone is {cone_volume}, and the slant is {cone_slant}.'

#def rectangular_prism(length, width, height):
  #recp_surface_area = 2 * (length * width + length * height + height * width)
  #recp_volume = width * length * height
  #recp_space_diagonal = math.sqrt(length ** 2 + width ** 2 + height ** 2)
  #return f'The surface area is {recp_surface_area}, the volume is {recp_volume}, and the space diagonal is {recp_space_diagonal}.'

#def cylinder(radius, height):
  #cyl_surface_area = 2 * radius * 3.14 * height + 2 * 3.14 * radius ** 2
  #cyl_volume = 3.14 * radius ** 2 * height
  #cyl_lateral_surface = 2 * 3.14 * radius * height
  #cyl_base_area = 3.14 * radius ** 2
  #cyl_diameter = 2 * radius
  #return f'The diameter is {cyl_diameter}, and the base area is {cyl_base_area}. The volume is {cyl_volume}, the surface area is {cyl_surface_area}, and the lateral surface is {cyl_lateral_surface}.'

#def pyramid(base_width, base_length, pyramid_height):
  #w = base_width 
  #l = base_length
  #h = pyramid_height
  #pyr_surface_area = l * w + l * math.sqrt((w / 2) ** 2 + h ** 2 + w) * math.sqrt((l / 2) ** 2 + h ** 2)
  #pyr_volume = l * w * h / 3
  #pyr_lateral_surface_area = l * math.sqrt((w / 2) ** 2 + h ** 2 + w) * math.sqrt ((l / 2) ** 2 + h ** 2)
  #pyr_base_area = l * w
  #return f'The base area is {pyr_base_area}. The surface area is {pyr_surface_area}, the lateral surface area is {pyr_lateral_surface_area}, and the volume is {pyr_volume}.'

#incomplete
##def triangular_prism(base_side_1, base_side_2, base_side_3, height):
  #a = base_side_1
  #b = base_side_2
  #c = base_side_3
  #height = h
  #volume = 1 / 4 * h math.sqrt(-a ** 4 + 2 * (a * b) ** 2 + 2 * (a *c) ** 2 -b ** 4 + 2 * (b * c) ** 2 - c ** 4)

#def pythag(self, side_1 = True, side_2 = True):
   # a = side_1
   # b = side_2
   # c = a ** 2 + b ** 2
   # return f'The legnth of side 3 is {c.sqrt}'